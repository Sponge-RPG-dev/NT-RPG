plugins {
    id "de.undercouch.download" version "5.1.0"
}

subprojects {
    apply plugin: 'java-library'

    tasks.withType(JavaCompile) {
        sourceCompatibility = "17"
        targetCompatibility = "17"
    }

    compileJava.options.encoding = compileTestJava.options.encoding = 'UTF-8'

    repositories {
        mavenCentral()
        mavenLocal()
        maven {
            url 'https://jitpack.io'
        }
        maven {
            url = "https://repo.aikar.co/content/groups/aikar/"
        }
    }

    task sourcesJar(type: Jar, dependsOn: classes) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives sourcesJar
    }

    test {
        dependsOn jar
        useJUnitPlatform()
    }

    compileJava {
        options.compilerArgs += ["-parameters"]
        options.fork = true
        options.forkOptions.executable = 'javac'
    }

    compileTestJava {
        options.compilerArgs += ["-parameters"]
        options.fork = true
        options.forkOptions.executable = 'javac'
    }

    jar {
        from {
            configurations.runtimeClasspath.findAll { it.name.endsWith('jar') }.collect { zipTree(it) }
        }
        exclude("**/*.DSA", "**/*.SF", "**/*pom.xml", "**/*pom.properties", '**/module-info.class', "**/*.php",)
    }

    dependencies {
        compileOnly 'com.google.auto.service:auto-service:1.0'
        annotationProcessor 'com.google.auto.service:auto-service:1.0'

        compileOnly 'it.unimi.dsi:fastutil:8.2.1'
        compileOnly 'com.google.code.gson:gson:2.8.5'

        testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
        testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.0'
        testImplementation 'com.github.JeffreyFalgout:junit5-extensions:junit5-extensions-1.2.1'
        testImplementation 'it.unimi.dsi:fastutil:8.2.1'
        //// https://mvnrepository.com/artifact/com.google.code.gson/gson
        testImplementation 'com.google.code.gson:gson:2.8.5'

    }

    tasks.named("jar") {
        duplicatesStrategy(DuplicatesStrategy.INCLUDE)
    }
}

task downloadFile(type: Download) {
    src "https://api.purpurmc.org/v2/purpur/1.19/latest/download"
    dest new File(getRootDir().toPath().resolve("server-spigot").toFile(), 'server.jar')
}